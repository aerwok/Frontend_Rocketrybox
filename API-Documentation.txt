# Rocketry Box - API Documentation

## Table of Contents
1. API Overview
2. Authentication
3. API Endpoints
4. Data Models
5. Error Handling
6. Rate Limiting
7. WebSocket Events
8. File Upload
9. Testing

## API Overview

### Base URL
Development: http://localhost:8000
Production: https://api.rocketrybox.com

### API Version
All endpoints are prefixed with `/api/v1/`

### Content Type
All requests and responses use `application/json`

### Authentication
All authenticated endpoints require a Bearer token in the Authorization header:
```
Authorization: Bearer <token>
```

## Authentication

### Login
Request Type: POST
Endpoint: /api/v1/auth/login
Headers: {
  "Content-Type": "application/json"
}
Request Body: {
  emailOrPhone: string,    // Email or 10-digit phone number
  password: string,        // Password
  otp: string,            // Optional, required for forgot password
  rememberMe: boolean     // Optional, defaults to false
}
Response: {
  token: string,
  user: {
    id: string,
    name: string,
    email: string,
    phone: string,
    role: "customer" | "seller" | "admin"
  }
}

### Admin Login
Request Type: POST
Endpoint: /api/v1/admin/auth/login
Headers: {
  "Content-Type": "application/json"
}
Request Body: {
  email: string,        // Admin email address
  password: string,     // Admin password
  rememberMe: boolean   // Optional, defaults to false
}
Response: {
  token: string,
  user: {
    id: string,
    name: string,
    email: string,
    role: "admin" | "super_admin",
    permissions: Array<string> // List of permission codes
  },
  expiresAt: string     // ISO date string of token expiration
}

### Forgot Password (Admin)
Request Type: POST
Endpoint: /api/v1/admin/auth/forgot-password
Headers: {
  "Content-Type": "application/json"
}
Request Body: {
  email: string        // Admin email address
}
Response: {
  success: boolean,
  message: string,     // "Password reset link sent to your email"
  requestId: string    // ID for tracking the request
}

### Reset Password (Admin)
Request Type: POST
Endpoint: /api/v1/admin/auth/reset-password
Headers: {
  "Content-Type": "application/json"
}
Request Body: {
  token: string,          // Reset token from email link
  password: string,       // New password
  confirmPassword: string // Confirm new password
}
Response: {
  success: boolean,
  message: string      // "Password reset successful"
}

### Register
Request Type: POST
Endpoint: /api/v1/auth/register
Headers: {
  "Content-Type": "application/json"
}
Request Body: {
  name: string,          // min 2 characters
  mobile: string,        // exactly 10 digits
  mobileOtp: string,     // exactly 6 digits
  email: string,         // valid email format
  emailOtp: string,      // exactly 6 digits
  password: string,      // see password rules below
  confirmPassword: string,// must match password
  address1: string,      // required
  address2: string,      // optional
  city: string,         // required
  state: string,        // required
  pincode: string,      // exactly 6 digits
  acceptTerms: boolean   // must be true
}
Response: {
  token: string,
  user: {
    id: string,
    name: string,
    email: string,
    phone: string,
    role: "customer" | "seller" | "admin"
  }
}

### Password Rules
{
  minLength: 8,
  requirements: [
    "At least one uppercase letter",
    "At least one lowercase letter",
    "At least one number",
    "At least one special character"
  ]
}

### OTP Endpoints
// Send Mobile OTP
Request Type: POST
Endpoint: /api/v1/auth/send-mobile-otp
Headers: {
  "Content-Type": "application/json"
}
Request Body: {
  mobile: string
}

// Send Email OTP
Request Type: POST
Endpoint: /api/v1/auth/send-email-otp
Headers: {
  "Content-Type": "application/json"
}
Request Body: {
  email: string
}

// Verify OTP
Request Type: POST
Endpoint: /api/v1/auth/verify-otp
Headers: {
  "Content-Type": "application/json"
}
Request Body: {
  phoneOrEmail: string,
  otp: string,      // 6 digits
  type: "mobile" | "email"
}

## API Endpoints

### Customer Endpoints

#### Profile Management
// Get Profile
Request Type: GET
Endpoint: /api/v1/customer/profile
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: {
  id: string,
  name: string,
  email: string,
  phone: string,
  address: {
    street: string,
    city: string,
    state: string,
    pincode: string,
    country: string
  }
}

// Update Profile
Request Type: PUT
Endpoint: /api/v1/customer/profile
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  name: string,
  phone: string,
  address: {
    street: string,
    city: string,
    state: string,
    pincode: string,
    country: string
  },
  email: string,
  password: {
    current: string,
    new: string
  }
}

#### Orders
// Create Order
Request Type: POST
Endpoint: /api/v1/customer/orders
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  pickupAddress: {
    street: string,
    city: string,
    state: string,
    pincode: string,
    country: string,
    contactName: string,
    contactPhone: string
  },
  deliveryAddress: {
    street: string,
    city: string,
    state: string,
    pincode: string,
    country: string,
    contactName: string,
    contactPhone: string
  },
  package: {
    weight: number,  // in kg
    length: number,  // in cm
    width: number,   // in cm
    height: number,  // in cm
    items: Array<{
      name: string,
      quantity: number,
      value: number
    }>,
    totalValue: number
  },
  serviceType: "express" | "standard",
  paymentMethod: "prepaid" | "cod"
}

// List Orders
Request Type: GET
Endpoint: /api/v1/customer/orders
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  page: number,
  limit: number,
  status: "pending" | "processing" | "shipped" | "delivered" | "cancelled"
}

// Order Details
Request Type: GET
Endpoint: /api/v1/customer/orders/:orderId
Headers: {
  "Authorization": "Bearer ${token}"
}

### Seller Endpoints

#### Dashboard API Endpoints
// Get Dashboard Stats
Request Type: GET
Endpoint: /api/v1/seller/dashboard/stats
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: {
  success: boolean,
  data: {
    orders: {
      total: number,
      pending: number,
      processing: number,
      shipped: number,
      delivered: number,
      cancelled: number,
      todayCount: number
    },
    shipments: {
      total: number,
      todayCount: number
    },
    delivery: {
      total: number,
      todayCount: number
    },
    cod: {
      expected: number,
      totalDue: number
    },
    revenue: {
      total: number,
      dailyGrowth: number
    },
    ndr: {
      pending: number,
      actionRequired: number
    }
  }
}

// Get Dashboard Chart Data
Request Type: GET
Endpoint: /api/v1/seller/dashboard/charts
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  dateRange: {
    from: string, // ISO date
    to: string    // ISO date
  },
  timeFilter: "1D" | "1W" | "1M" | "3M" | "1Y" | "ALL"
}
Response: {
  success: boolean,
  data: {
    revenue: Array<{
      date: string,
      value: number
    }>,
    orders: Array<{
      date: string,
      value: number
    }>,
    deliveries: Array<{
      date: string,
      value: number
    }>
  }
}

// Get Courier Performance
Request Type: GET
Endpoint: /api/v1/seller/dashboard/courier-performance
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  dateRange: {
    from: string, // ISO date
    to: string    // ISO date
  }
}
Response: {
  success: boolean,
  data: Array<{
    courier: string,
    deliveries: number,
    onTime: number,
    delayed: number,
    returned: number,
    performance: number, // percentage
    avgDeliveryTime: number // in hours
  }>
}

// Get Top Products
Request Type: GET
Endpoint: /api/v1/seller/dashboard/top-products
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  dateRange: {
    from: string, // ISO date
    to: string    // ISO date
  },
  limit: number   // Optional, defaults to 10
}
Response: {
  success: boolean,
  data: Array<{
    id: string,
    name: string,
    sku: string,
    totalOrders: number,
    totalUnits: number,
    totalRevenue: number,
    image: string
  }>
}

// Download Dashboard Report
Request Type: GET
Endpoint: /api/v1/seller/dashboard/download-report
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  dateRange: {
    from: string, // ISO date 
    to: string    // ISO date
  },
  format: "csv" | "pdf"
}
Response: Binary file (CSV or PDF)

#### Profile Management
// Get Profile
Request Type: GET
Endpoint: /api/v1/seller/profile
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: {
  id: string,
  name: string,
  email: string,
  phone: string,
  companyName: string,
  businessType: string,
  gstin: string,
  pan: string,
  address: {
    street: string,
    city: string,
    state: string,
    pincode: string,
    country: string
  },
  documents: Array<{
    type: string,
    url: string,
    status: string
  }>,
  settings: {
    notifications: {
      email: boolean,
      sms: boolean,
      push: boolean
    },
    autoAcceptOrders: boolean,
    defaultServiceType: string,
    defaultPaymentMethod: string
  }
}

### Weight Dispute Endpoints

#### Upload Weight Dispute File
Request Type: POST
Endpoint: /api/v1/seller/weight-disputes/bulk-upload
Headers: {
  "Authorization": "Bearer ${token}",
  "Content-Type": "multipart/form-data"
}
Request Body: {
  file: File  // CSV or Excel file with weight dispute data
}
Response: {
  success: boolean,
  message: string,
  data: {
    uploadId: string,
    processedRows: number,
    validRows: number,
    invalidRows: number,
    errors: Array<{
      row: number,
      message: string
    }>
  }
}

#### Get Upload Template
Request Type: GET
Endpoint: /api/v1/seller/weight-disputes/template
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  format: "csv" | "excel"  // Optional, defaults to "csv"
}
Response: Binary file (CSV or Excel)

#### Get Weight Disputes
Request Type: GET
Endpoint: /api/v1/seller/weight-disputes
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  status: "Pending" | "Accepted" | "Rejected" | "All",  // Optional, defaults to "All" 
  page: number,     // Optional, defaults to 1
  limit: number,    // Optional, defaults to 20
  search: string,   // Optional, search by AWB or order ID
  fromDate: string, // Optional, ISO date string
  toDate: string    // Optional, ISO date string
}
Response: {
  success: boolean,
  data: {
    disputes: Array<{
      id: string,
      awbNumber: string,
      orderId: string,
      disputeDate: string,
      givenWeight: number,
      appliedWeight: number,
      revisedWeight: number,
      status: "Pending" | "Accepted" | "Rejected",
      remarks: string,
      createdAt: string,
      updatedAt: string
    }>,
    pagination: {
      currentPage: number,
      totalPages: number,
      totalItems: number,
      itemsPerPage: number
    }
  }
}

#### Get Weight Dispute Details
Request Type: GET
Endpoint: /api/v1/seller/weight-disputes/:disputeId
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: {
  success: boolean,
  data: {
    id: string,
    awbNumber: string,
    orderId: string,
    disputeDate: string,
    givenWeight: number,
    appliedWeight: number,
    revisedWeight: number,
    status: "Pending" | "Accepted" | "Rejected",
    remarks: string,
    evidence: Array<{
      id: string,
      fileUrl: string,
      fileType: string,
      uploadedAt: string
    }>,
    orderDetails: {
      orderNumber: string,
      orderDate: string,
      customerName: string,
      deliveryAddress: {
        street: string,
        city: string,
        state: string,
        pincode: string
      }
    },
    timeline: Array<{
      date: string,
      action: string,
      actor: string,
      comment: string
    }>,
    createdAt: string,
    updatedAt: string
  }
}

#### Create Single Weight Dispute
Request Type: POST
Endpoint: /api/v1/seller/weight-disputes
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  awbNumber: string,
  orderId: string,
  givenWeight: number,
  appliedWeight: number,
  remarks: string,
  evidence: Array<{
    fileId: string  // From file upload endpoint
  }>
}
Response: {
  success: boolean,
  message: string,
  data: {
    id: string,
    awbNumber: string,
    status: "Pending"
  }
}

#### Upload Dispute Evidence
Request Type: POST
Endpoint: /api/v1/seller/weight-disputes/evidence
Headers: {
  "Authorization": "Bearer ${token}",
  "Content-Type": "multipart/form-data"
}
Request Body: {
  file: File  // Image or PDF file with evidence, max 5MB
}
Response: {
  success: boolean,
  data: {
    fileId: string,
    fileUrl: string,
    fileType: string
  }
}

#### Cancel Weight Dispute
Request Type: DELETE
Endpoint: /api/v1/seller/weight-disputes/:disputeId
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: {
  success: boolean,
  message: string
}

#### Add Comment to Dispute
Request Type: POST
Endpoint: /api/v1/seller/weight-disputes/:disputeId/comments
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  comment: string
}
Response: {
  success: boolean,
  data: {
    id: string,
    comment: string,
    createdBy: string,
    createdAt: string
  }
}

#### Get Dispute Statistics
Request Type: GET
Endpoint: /api/v1/seller/weight-disputes/statistics
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  fromDate: string, // Optional, ISO date string
  toDate: string    // Optional, ISO date string
}
Response: {
  success: boolean,
  data: {
    totalDisputes: number,
    pendingDisputes: number,
    acceptedDisputes: number,
    rejectedDisputes: number,
    totalWeightDifference: number,
    avgResolutionTime: number, // in days
    costSavings: number        // in currency units
  }
}

### Admin Weight Dispute Endpoints

#### Get All Weight Disputes (Admin)
Request Type: GET
Endpoint: /api/v1/admin/weight-disputes
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  status: "Pending" | "Accepted" | "Rejected" | "All",  // Optional, defaults to "All"
  sellerId: string, // Optional, filter by seller
  page: number,     // Optional, defaults to 1
  limit: number,    // Optional, defaults to 20
  search: string,   // Optional, search by AWB or order ID
  fromDate: string, // Optional, ISO date string
  toDate: string    // Optional, ISO date string
}
Response: {
  success: boolean,
  data: {
    disputes: Array<{
      id: string,
      awbNumber: string,
      orderId: string,
      sellerId: string,
      sellerName: string,
      disputeDate: string,
      givenWeight: number,
      appliedWeight: number,
      revisedWeight: number,
      status: "Pending" | "Accepted" | "Rejected",
      remarks: string,
      createdAt: string,
      updatedAt: string
    }>,
    pagination: {
      currentPage: number,
      totalPages: number,
      totalItems: number,
      itemsPerPage: number
    }
  }
}

#### Update Dispute Status (Admin)
Request Type: PUT
Endpoint: /api/v1/admin/weight-disputes/:disputeId
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  status: "Accepted" | "Rejected",
  revisedWeight: number,  // Optional, required for "Accepted" status
  comment: string         // Optional, admin comment on decision
}
Response: {
  success: boolean,
  message: string,
  data: {
    id: string,
    status: "Accepted" | "Rejected",
    revisedWeight: number,
    updatedAt: string
  }
}

### Webhook Endpoints

#### Register Webhook
Request Type: POST
Endpoint: /api/v1/webhooks/register
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  url: string,         // Your webhook URL
  secret: string,      // Secret key for verifying webhook signatures
  events: Array<string> // Events to subscribe to, e.g., ["order.created", "order.status_updated"]
}

Response: {
  success: boolean,
  data: {
    id: string,
    url: string,
    events: Array<string>,
    createdAt: string
  }
}

#### List Webhooks
Request Type: GET
Endpoint: /api/v1/webhooks
Headers: {
  "Authorization": "Bearer ${token}"
}

Response: {
  success: boolean,
  data: Array<{
    id: string,
    url: string,
    events: Array<string>,
    createdAt: string,
    lastTriggered: string,
    active: boolean
  }>
}

#### Update Webhook
Request Type: PUT
Endpoint: /api/v1/webhooks/:webhookId
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  url: string,
  secret: string,
  events: Array<string>,
  active: boolean
}

Response: {
  success: boolean,
  data: {
    id: string,
    url: string,
    events: Array<string>,
    active: boolean,
    updatedAt: string
  }
}

#### Delete Webhook
Request Type: DELETE
Endpoint: /api/v1/webhooks/:webhookId
Headers: {
  "Authorization": "Bearer ${token}"
}

Response: {
  success: boolean,
  message: string
}

#### Webhook Events
The following events are available for subscription:
- order.created: When a new order is created
- order.status_updated: When an order's status changes
- order.delivered: When an order is delivered
- shipment.created: When a shipment is created
- shipment.in_transit: When a shipment starts moving
- shipment.exception: When a delivery exception occurs
- shipment.out_for_delivery: When a shipment is out for delivery
- return.initiated: When a return is initiated
- return.processed: When a return is processed
- payment.received: When a payment is received
- payment.failed: When a payment fails

### WhatsApp Notification Endpoints

#### Configure WhatsApp Settings
Request Type: PUT
Endpoint: /api/v1/notifications/whatsapp/settings
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  enabled: boolean,
  business: {
    phoneNumber: string,
    displayName: string
  },
  templates: Array<{
    id: string,
    name: string,
    enabled: boolean
  }>,
  notificationTypes: {
    orderConfirmation: boolean,
    orderPacked: boolean,
    outForDelivery: boolean,
    deliveryConfirmation: boolean,
    deliveryFailed: boolean,
    returnInitiated: boolean,
    returnPicked: boolean,
    returnDelivered: boolean
  }
}

Response: {
  success: boolean,
  message: string,
  data: {
    enabled: boolean,
    business: {
      phoneNumber: string,
      displayName: string
    },
    templates: Array<{
      id: string,
      name: string,
      enabled: boolean
    }>,
    notificationTypes: {
      orderConfirmation: boolean,
      orderPacked: boolean,
      outForDelivery: boolean,
      deliveryConfirmation: boolean,
      deliveryFailed: boolean,
      returnInitiated: boolean,
      returnPicked: boolean,
      returnDelivered: boolean
    }
  }
}

#### Get WhatsApp Settings
Request Type: GET
Endpoint: /api/v1/notifications/whatsapp/settings
Headers: {
  "Authorization": "Bearer ${token}"
}

Response: {
  success: boolean,
  data: {
    enabled: boolean,
    business: {
      phoneNumber: string,
      displayName: string
    },
    templates: Array<{
      id: string,
      name: string,
      enabled: boolean
    }>,
    notificationTypes: {
      orderConfirmation: boolean,
      orderPacked: boolean,
      outForDelivery: boolean,
      deliveryConfirmation: boolean,
      deliveryFailed: boolean,
      returnInitiated: boolean,
      returnPicked: boolean,
      returnDelivered: boolean
    }
  }
}

#### Send WhatsApp Test Message
Request Type: POST
Endpoint: /api/v1/notifications/whatsapp/test
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  phoneNumber: string,
  templateId: string
}

Response: {
  success: boolean,
  message: string
}

#### Reports API Endpoints
// Get Report Stats
Request Type: GET
Endpoint: /api/v1/admin/reports/stats
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  fromDate: string,  // ISO date
  toDate: string     // ISO date
}
Response: {
  totalRevenue: number,
  totalOrders: number,
  totalShipments: number,
  conversionRate: number
}

// Get Revenue Data
Request Type: GET
Endpoint: /api/v1/admin/reports/revenue-data
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  fromDate: string,           // ISO date string
  toDate: string,             // ISO date string
  timeFilter: "1D" | "1W" | "1M" | "3M" | "1Y" | "ALL"
}
Response: Array<{
  time: string,
  revenue: number
}>

// Get Delivery Partner Shares
Request Type: GET
Endpoint: /api/v1/admin/reports/delivery-partner-shares
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  fromDate: string,  // ISO date
  toDate: string     // ISO date
}
Response: Array<{
  name: string,
  value: number,
  fill: string
}>

// Download Report
Request Type: GET
Endpoint: /api/v1/admin/reports/download
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  fromDate: string,  // ISO date
  toDate: string,    // ISO date
  format: "csv" | "pdf"
}
Response: Blob (File Download)

#### User Management 

### NDR (Non-Delivery Report) Endpoints

#### Get NDR List
Request Type: GET
Endpoint: /api/v1/seller/ndr
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  status: "Pending" | "In Progress" | "Resolved" | "RTO Initiated" | "All",  // Optional, defaults to "All" 
  page: number,     // Optional, defaults to 1
  limit: number,    // Optional, defaults to 20
  search: string,   // Optional, search by AWB, order ID, or customer name
  fromDate: string, // Optional, ISO date string
  toDate: string    // Optional, ISO date string
}
Response: {
  success: boolean,
  data: {
    ndr: Array<{
      id: string,
      awb: string,
      orderDate: string,
      courier: string,
      customer: string,
      attempts: number,
      lastAttemptDate: string,
      status: string,
      reason: string,
      action: string
    }>,
    pagination: {
      currentPage: number,
      totalPages: number,
      totalItems: number,
      itemsPerPage: number
    }
  }
}

#### Get NDR Details
Request Type: GET
Endpoint: /api/v1/seller/ndr/:ndrId
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: {
  success: boolean,
  data: {
    awb: string,
    orderNo: string,
    orderDate: string,
    courier: string,
    customer: string,
    attempts: number,
    lastAttemptDate: string,
    status: string,
    reason: string,
    action: string,
    currentLocation: {
      lat: number,
      lng: number
    },
    deliveryAttempts: Array<{
      date: string,
      time: string,
      status: string,
      reason: string,
      comments: string
    }>,
    customerDetails: {
      name: string,
      address1: string,
      address2: string,
      city: string,
      state: string,
      pincode: string,
      country: string,
      phone: string,
      email: string
    },
    products: Array<{
      name: string,
      sku: string,
      quantity: number,
      price: number,
      image: string
    }>
  }
}

#### Update NDR Action
Request Type: PUT
Endpoint: /api/v1/seller/ndr/:ndrId/action
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  action: "Reattempt Delivery" | "Return to Origin" | "Update Address",
  comments: string,
  newAddress: { // Optional, required if action is "Update Address"
    fullName: string,
    contactNumber: string,
    addressLine1: string,
    addressLine2: string, // Optional
    landmark: string, // Optional
    pincode: string,
    city: string,
    state: string
  },
  rescheduleDate: string // Optional, ISO date string for reattempt
}
Response: {
  success: boolean,
  message: string,
  data: {
    id: string,
    action: string,
    status: string,
    updatedAt: string
  }
}

#### Upload NDR Bulk Actions
Request Type: POST
Endpoint: /api/v1/seller/ndr/bulk-upload
Headers: {
  "Authorization": "Bearer ${token}",
  "Content-Type": "multipart/form-data"
}
Request Body: {
  file: File  // Excel file with NDR actions
}
Response: {
  success: boolean,
  message: string,
  data: {
    uploadId: string,
    processedRows: number,
    validRows: number,
    invalidRows: number,
    errors: Array<{
      row: number,
      message: string
    }>
  }
}

#### Download NDR Report
Request Type: GET
Endpoint: /api/v1/seller/ndr/download
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  status: "Pending" | "In Progress" | "Resolved" | "RTO Initiated" | "All",  // Optional, defaults to "All"
  fromDate: string, // Optional, ISO date string
  toDate: string,   // Optional, ISO date string
  format: "xlsx" | "csv" // Optional, defaults to "xlsx"
}
Response: Binary file (Excel or CSV)

### Bulk Order Endpoints

#### Upload Bulk Order
Request Type: POST
Endpoint: /api/v1/seller/bulk-orders/upload
Headers: {
  "Authorization": "Bearer ${token}",
  "Content-Type": "multipart/form-data"
}
Request Body: {
  file: File  // Excel file with order data
}
Response: {
  success: boolean,
  message: string,
  data: {
    orderId: string,
    status: "Processing" | "Completed" | "Failed",
    totalRows: number,
    processedRows: number,
    failedRows: number,
    errors: Array<{
      row: number,
      message: string
    }>,
    createdAt: string,
    updatedAt: string
  }
}

#### Download Bulk Order Template
Request Type: GET
Endpoint: /api/v1/seller/bulk-orders/template
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: Binary file (Excel)

#### Get Bulk Upload History
Request Type: GET
Endpoint: /api/v1/seller/bulk-orders/history
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  page: number,     // Optional, defaults to 1
  limit: number,    // Optional, defaults to 10
  fromDate: string, // Optional, ISO date string
  toDate: string    // Optional, ISO date string
}
Response: {
  success: boolean,
  data: {
    uploads: Array<{
      id: number,
      uploadDate: string,
      originalFile: string,
      successCount: number,
      errorCount: number,
      blankCount: number,
      totalCount: number,
      errorFile: string | null,
      createdAt: string
    }>,
    pagination: {
      currentPage: number,
      totalPages: number,
      totalItems: number,
      itemsPerPage: number
    }
  }
}

#### Download Error File
Request Type: GET
Endpoint: /api/v1/seller/bulk-orders/errors/:uploadId
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: Binary file (Excel)

### Shipment Management Endpoints

#### Create Shipment
Request Type: POST
Endpoint: /api/v1/seller/shipments
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  orderId: string,
  courier: string,
  shippingMode: "Air" | "Surface" | "Express",
  weight: number,
  dimensions: {
    length: number,
    width: number,
    height: number
  },
  sellerAddress: {
    id: string | null, // If saved address is used
    name: string,
    phone: string,
    email: string,
    addressLine1: string,
    addressLine2: string,
    city: string,
    state: string,
    pincode: string,
    country: string
  }
}
Response: {
  success: boolean,
  message: string,
  data: {
    shipmentId: string,
    trackingNumber: string,
    label: string, // URL to shipping label
    status: string
  }
}

#### List Shipments
Request Type: GET
Endpoint: /api/v1/seller/shipments
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  page: number,     // Optional, defaults to 1
  limit: number,    // Optional, defaults to 20
  status: "Booked" | "Pending Pickup" | "In-transit" | "Out for Delivery" | "Delivered" | "Exception" | "Cancelled" | "All", // Optional, defaults to "All"
  search: string,   // Optional, search by AWB or order ID
  fromDate: string, // Optional, ISO date string
  toDate: string    // Optional, ISO date string
}
Response: {
  success: boolean,
  data: {
    shipments: Array<{
      orderId: string,
      orderDate: string,
      booked: string,
      pickupId: string,
      customer: string,
      product: string,
      amount: string,
      payment: string,
      weight: string,
      channel: string,
      awb: string,
      courier: string,
      tracking: string,
      status: string
    }>,
    pagination: {
      currentPage: number,
      totalPages: number,
      totalItems: number,
      itemsPerPage: number
    }
  }
}

#### Get Shipment Details
Request Type: GET
Endpoint: /api/v1/seller/shipments/:shipmentId
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: {
  success: boolean,
  data: {
    orderNo: string,
    orderPlaced: string,
    paymentType: string,
    status: string,
    estimatedDelivery: string,
    awbNumber: string,
    currentLocation: {
      lat: number,
      lng: number
    },
    trackingEvents: Array<{
      date: string,
      time: string,
      activity: string,
      location: string,
      status: string
    }>,
    weight: string,
    dimensions: {
      length: number,
      width: number,
      height: number
    },
    volumetricWeight: string,
    chargedWeight: string,
    customerDetails: {
      name: string,
      address1: string,
      address2: string,
      city: string,
      state: string,
      pincode: string,
      country: string,
      phone: string
    },
    warehouseDetails: {
      name: string,
      address1: string,
      city: string,
      state: string,
      pincode: string,
      country: string,
      phone: string
    },
    products: Array<{
      name: string,
      sku: string,
      quantity: number,
      price: number,
      image: string
    }>
  }
}

#### Generate Shipping Label
Request Type: GET
Endpoint: /api/v1/seller/shipments/:shipmentId/label
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  format: "pdf" | "png", // Optional, defaults to "pdf"
  paperSize: "A4" | "A6" | "4x6", // Optional, defaults to "A4"
  includeInvoice: boolean // Optional, defaults to false
}
Response: Binary file (PDF or PNG)

#### Cancel Shipment
Request Type: POST
Endpoint: /api/v1/seller/shipments/:shipmentId/cancel
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  reason: string,
  comments: string // Optional
}
Response: {
  success: boolean,
  message: string,
  data: {
    shipmentId: string,
    status: string,
    cancellationId: string,
    updatedAt: string
  }
}

### Tracking Endpoints

#### Track Shipment by AWB
Request Type: GET
Endpoint: /api/v1/tracking/:awbNumber
Headers: {
  "Authorization": "Bearer ${token}" // Optional, more details if authenticated
}
Response: {
  success: boolean,
  data: {
    awbNumber: string,
    courier: string,
    status: string,
    orderNo: string,
    estimatedDelivery: string,
    origin: string,
    destination: string,
    currentLocation: string,
    lastUpdated: string,
    events: Array<{
      date: string,
      time: string,
      activity: string,
      location: string,
      status: string
    }>,
    orderDetails: { // Only if authenticated
      orderId: string,
      orderDate: string,
      payment: {
        method: string,
        status: string,
        amount: number
      },
      customer: {
        name: string, // Partial info for privacy
        city: string,
        state: string
      },
      items: Array<{
        name: string,
        quantity: number
      }>
    }
  }
}

#### Track Order by Order ID
Request Type: GET
Endpoint: /api/v1/customer/orders/:orderId/track
Headers: {
  "Authorization": "Bearer ${token}"
}
Response: {
  success: boolean,
  data: {
    orderId: string,
    orderDate: string,
    status: string,
    shipments: Array<{
      shipmentId: string,
      awbNumber: string,
      courier: string,
      status: string,
      estimatedDelivery: string,
      trackingUrl: string,
      events: Array<{
        date: string,
        time: string,
        activity: string,
        location: string,
        status: string
      }>
    }>
  }
}

#### Get Rate Quotes
Request Type: POST
Endpoint: /api/v1/shipping/rates
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}"
}
Request Body: {
  origin: {
    pincode: string,
    city: string,
    state: string,
    country: string
  },
  destination: {
    pincode: string,
    city: string,
    state: string,
    country: string
  },
  package: {
    weight: number, // in kg
    dimensions: {
      length: number, // in cm
      width: number,  // in cm
      height: number  // in cm
    },
    value: number,    // in currency units
    type: "Documents" | "Non-Documents"
  },
  isPrepaid: boolean, // true for prepaid, false for COD
  codValue: number    // Only required for COD
}
Response: {
  success: boolean,
  data: {
    availableRates: Array<{
      courier: string,
      mode: string,
      estimatedDelivery: string,
      rate: number,
      baseRate: number,
      taxes: number,
      codCharges: number,
      fuelCharges: number,
      discount: number,
      features: Array<string>,
      isBestValue: boolean,
      isFastest: boolean
    }>
  }
}

### Admin Team Management

#### List Admin Users
Request Type: GET
Endpoint: /api/v1/admin/team
Headers: {
  "Authorization": "Bearer ${token}"
}
Query Parameters: {
  page: number,      // Optional, defaults to 1
  limit: number,     // Optional, defaults to 20
  search: string,    // Optional, search by name or email
  status: "active" | "inactive" | "all" // Optional, defaults to "all"
}
Response: {
  success: boolean,
  data: {
    admins: Array<{
      id: string,
      name: string,
      email: string,
      role: "admin" | "super_admin",
      status: "active" | "inactive",
      permissions: Array<string>,
      lastLogin: string,
      createdAt: string
    }>,
    pagination: {
      currentPage: number,
      totalPages: number,
      totalItems: number,
      itemsPerPage: number
    }
  }
}

#### Create Admin User
Request Type: POST
Endpoint: /api/v1/admin/team
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}" // Must be super_admin
}
Request Body: {
  name: string,
  email: string,
  role: "admin" | "super_admin",
  permissions: Array<string>,
  sendInvite: boolean // Whether to send invitation email
}
Response: {
  success: boolean,
  message: string,
  data: {
    id: string,
    name: string,
    email: string,
    role: string,
    status: "pending" | "active",
    inviteLink: string // Only if sendInvite is true
  }
}

#### Update Admin User
Request Type: PUT
Endpoint: /api/v1/admin/team/:adminId
Headers: {
  "Content-Type": "application/json",
  "Authorization": "Bearer ${token}" // Must be super_admin
}
Request Body: {
  name: string,
  role: "admin" | "super_admin",
  permissions: Array<string>,
  status: "active" | "inactive"
}
Response: {
  success: boolean,
  message: string,
  data: {
    id: string,
    name: string,
    email: string,
    role: string,
    status: string,
    updatedAt: string
  }
}

#### Delete Admin User
Request Type: DELETE
Endpoint: /api/v1/admin/team/:adminId
Headers: {
  "Authorization": "Bearer ${token}" // Must be super_admin
}
Response: {
  success: boolean,
  message: string
}

#### Resend Admin Invitation
Request Type: POST
Endpoint: /api/v1/admin/team/:adminId/resend-invite
Headers: {
  "Authorization": "Bearer ${token}" // Must be super_admin
}
Response: {
  success: boolean,
  message: string,
  data: {
    email: string,
    inviteLink: string
  }
} 